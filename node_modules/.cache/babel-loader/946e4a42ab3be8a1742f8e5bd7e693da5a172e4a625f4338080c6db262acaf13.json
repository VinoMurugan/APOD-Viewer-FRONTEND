{"ast":null,"code":"var _jsxFileName = \"C:\\\\SE\\\\ApodViewer\\\\backend\\\\apod-viewer-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport ApodList from './components/ApodList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [apodEntries, setApodEntries] = useState([]);\n\n  // Implement your API requests and search functionality here\n  const handleSearch = async searchTerm => {\n    try {\n      const response = await fetch(`/apod/search?query=${searchTerm}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const contentType = response.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        throw new Error('Response is not JSON');\n      }\n      const data = await response.json();\n      setApodEntries(data);\n    } catch (error) {\n      console.error('Error:', error.message);\n      // Handle errors here (e.g., show an error message to the user)\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ApodList, {\n      apodEntries: apodEntries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ViERl3kzcPu+tL4EFjoK9X3jjhg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchBar","ApodList","jsxDEV","_jsxDEV","App","_s","apodEntries","setApodEntries","handleSearch","searchTerm","response","fetch","ok","Error","contentType","headers","get","includes","data","json","error","console","message","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/SE/ApodViewer/backend/apod-viewer-frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport ApodList from './components/ApodList';\n\nfunction App() {\n  const [apodEntries, setApodEntries] = useState([]);\n\n  // Implement your API requests and search functionality here\n  const handleSearch = async (searchTerm) => {\n    try {\n      const response = await fetch(`/apod/search?query=${searchTerm}`);\n  \n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n  \n      const contentType = response.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        throw new Error('Response is not JSON');\n      }\n  \n      const data = await response.json();\n      setApodEntries(data);\n    } catch (error) {\n      console.error('Error:', error.message);\n      // Handle errors here (e.g., show an error message to the user)\n    }\n  };\n  \n\n  return (\n    <div className=\"App\">\n      <SearchBar onSearch={handleSearch} />\n      <ApodList apodEntries={apodEntries} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAMS,YAAY,GAAG,MAAOC,UAAU,IAAK;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,sBAAqBF,UAAW,EAAC,CAAC;MAEhE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAMC,WAAW,GAAGJ,QAAQ,CAACK,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MACxD,IAAI,CAACF,WAAW,IAAI,CAACA,WAAW,CAACG,QAAQ,CAAC,kBAAkB,CAAC,EAAE;QAC7D,MAAM,IAAIJ,KAAK,CAAC,sBAAsB,CAAC;MACzC;MAEA,MAAMK,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCZ,cAAc,CAACW,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACE,OAAO,CAAC;MACtC;IACF;EACF,CAAC;;EAGD,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA,CAACH,SAAS;MAACyB,QAAQ,EAAEjB;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrC1B,OAAA,CAACF,QAAQ;MAACK,WAAW,EAAEA;IAAY;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAACxB,EAAA,CAhCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}