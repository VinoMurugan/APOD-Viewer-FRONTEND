{"ast":null,"code":"var _jsxFileName = \"C:\\\\SE\\\\ApodViewer\\\\backend\\\\apod-viewer-frontend\\\\src\\\\components\\\\ApodList.js\";\n// import React from 'react';\n\n// const ApodList = ({ apodEntries }) => {\n//   if (!apodEntries || apodEntries.length === 0) {\n//     return <p>No APOD entries available.</p>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>Astronomy Picture of the Day (APOD)</h1>\n//       <ul>\n//         {apodEntries.map((entry, index) => (\n//           <li key={index}>\n//             <h2>{entry.title}</h2>\n//             <p>Date: {entry.date}</p>\n//             <p>{entry.description}</p>\n//             <img src={entry.imageUrl} alt={entry.title} />\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default ApodList;\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApodList = ({\n  apodEntries\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Astronomy Picture of the Day (APOD)\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: apodEntries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: entry.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date: \", entry.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: entry.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: entry.imageUrl,\n        alt: entry.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 3\n}, this);\n_c = ApodList;\nexport default ApodList;\nvar _c;\n$RefreshReg$(_c, \"ApodList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ApodList","apodEntries","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","index","title","date","description","src","imageUrl","alt","_c","$RefreshReg$"],"sources":["C:/SE/ApodViewer/backend/apod-viewer-frontend/src/components/ApodList.js"],"sourcesContent":["// import React from 'react';\r\n\r\n// const ApodList = ({ apodEntries }) => {\r\n//   if (!apodEntries || apodEntries.length === 0) {\r\n//     return <p>No APOD entries available.</p>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Astronomy Picture of the Day (APOD)</h1>\r\n//       <ul>\r\n//         {apodEntries.map((entry, index) => (\r\n//           <li key={index}>\r\n//             <h2>{entry.title}</h2>\r\n//             <p>Date: {entry.date}</p>\r\n//             <p>{entry.description}</p>\r\n//             <img src={entry.imageUrl} alt={entry.title} />\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ApodList;\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nconst ApodList = ({ apodEntries }) => (\r\n  <div>\r\n    <h1>Astronomy Picture of the Day (APOD)</h1>\r\n    <ul>\r\n      {apodEntries.map((entry, index) => (\r\n        <li key={index}>\r\n          <h2>{entry.title}</h2>\r\n          <p>Date: {entry.date}</p>\r\n          <p>{entry.description}</p>\r\n          <img src={entry.imageUrl} alt={entry.title} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\nexport default ApodList;"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAY,CAAC,kBAC/BF,OAAA;EAAAG,QAAA,gBACEH,OAAA;IAAAG,QAAA,EAAI;EAAmC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,eAC5CP,OAAA;IAAAG,QAAA,EACGD,WAAW,CAACM,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC5BV,OAAA;MAAAG,QAAA,gBACEH,OAAA;QAAAG,QAAA,EAAKM,KAAK,CAACE;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBP,OAAA;QAAAG,QAAA,GAAG,QAAM,EAACM,KAAK,CAACG,IAAI;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBP,OAAA;QAAAG,QAAA,EAAIM,KAAK,CAACI;MAAW;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BP,OAAA;QAAKc,GAAG,EAAEL,KAAK,CAACM,QAAS;QAACC,GAAG,EAAEP,KAAK,CAACE;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAJvCG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKV,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACF,CACN;AAACU,EAAA,GAdIhB,QAAQ;AAed,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}