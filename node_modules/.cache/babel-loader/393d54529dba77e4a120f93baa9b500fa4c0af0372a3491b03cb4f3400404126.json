{"ast":null,"code":"var _jsxFileName = \"C:\\\\SE\\\\ApodViewer\\\\backend\\\\apod-viewer-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport ApodList from './components/ApodList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [apodEntries, setApodEntries] = useState([]);\n  useEffect(() => {\n    const fetchApodData = async () => {\n      try {\n        const response = await fetch(`https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_API_KEY}&date=2023-09-09`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setApodEntries([data]);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchApodData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ApodList, {\n      apodEntries: apodEntries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TxDku75qcgNkVZx65sQaVxgBxxI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","ApodList","jsxDEV","_jsxDEV","App","_s","apodEntries","setApodEntries","fetchApodData","response","fetch","process","env","REACT_APP_NASA_API_KEY","ok","Error","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/SE/ApodViewer/backend/apod-viewer-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport ApodList from './components/ApodList';\n\nfunction App() {\n  const [apodEntries, setApodEntries] = useState([]);\n  \n  useEffect(() => {\n    const fetchApodData = async () => {\n      try {\n        const response = await fetch(\n          `https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_API_KEY}&date=2023-09-09`\n        );\n\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n\n        const data = await response.json();\n        setApodEntries([data]);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchApodData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <SearchBar />\n      <ApodList apodEntries={apodEntries} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,+CAA8CC,OAAO,CAACC,GAAG,CAACC,sBAAuB,kBACpF,CAAC;QAED,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCV,cAAc,CAAC,CAACS,IAAI,CAAC,CAAC;MACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDV,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA,CAACH,SAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbtB,OAAA,CAACF,QAAQ;MAACK,WAAW,EAAEA;IAAY;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAACpB,EAAA,CA9BQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}