{"ast":null,"code":"var _jsxFileName = \"C:\\\\SE\\\\ApodViewer\\\\backend\\\\apod-viewer-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport ApodList from './components/ApodList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [apodEntries, setApodEntries] = useState([]);\n  const handleSearch = async searchTerm => {\n    try {\n      const response = await fetch(`https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_API_KEY}&date=${searchTerm}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setApodEntries([data]);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    // Fetch initial data here (you can set a default date if needed)\n    handleSearch('2023-09-09');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ApodList, {\n      apodEntries: apodEntries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TxDku75qcgNkVZx65sQaVxgBxxI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","ApodList","jsxDEV","_jsxDEV","App","_s","apodEntries","setApodEntries","handleSearch","searchTerm","response","fetch","process","env","REACT_APP_NASA_API_KEY","ok","Error","data","json","error","console","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/SE/ApodViewer/backend/apod-viewer-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport ApodList from './components/ApodList';\n\nfunction App() {\n  const [apodEntries, setApodEntries] = useState([]);\n\n  const handleSearch = async (searchTerm) => {\n    try {\n      const response = await fetch(\n        `https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_API_KEY}&date=${searchTerm}`\n      );\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      setApodEntries([data]);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    // Fetch initial data here (you can set a default date if needed)\n    handleSearch('2023-09-09');\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <SearchBar onSearch={handleSearch} />\n      <ApodList apodEntries={apodEntries} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMU,YAAY,GAAG,MAAOC,UAAU,IAAK;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,+CAA8CC,OAAO,CAACC,GAAG,CAACC,sBAAuB,SAAQL,UAAW,EACvG,CAAC;MAED,IAAI,CAACC,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCX,cAAc,CAAC,CAACU,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACd;IACAS,YAAY,CAAC,YAAY,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA,CAACH,SAAS;MAACuB,QAAQ,EAAEf;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCxB,OAAA,CAACF,QAAQ;MAACK,WAAW,EAAEA;IAAY;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAACtB,EAAA,CA/BQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}